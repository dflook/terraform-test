name: terraform-test
description: Execute automated tests for a Terraform module
author: Daniel Flook

inputs:
  path:
    description: The path to the Terraform module under test
    required: false
    default: "."
  test_directory:
    description: The directory within the module path that contains the test files.
    required: false
    default: ""
  test_filter:
    description: |
      The test files to run, one per line.

      If not specified, all test files in the `test_directory` will be run.
      The are paths relative to the module path.
    required: false
    default: ""
  variables:
    description: |
      Variables to set for the tests. This should be valid Terraform syntax - like a [variable definition file](https://developer.hashicorp.com/terraform/language/values/variables#variable-definitions-tfvars-files).
      Variables set here override any given in `var_file`s.
    required: false
  var_file:
    description: |
      List of tfvars files to use, one per line.
      Paths should be relative to the GitHub Actions workspace
    required: false

outputs:
  junit-xml-path:
    description: |
      A test report in JUnit XML format.

      The path is relative to the Actions workspace.

      This will only be available when using Terraform 1.11.0 or later.
  failure-reason:
    description: |
      When the job outcome is `failure`, this output may be set. The value may be one of:

      - `no-tests` - No tests were found to run.
      - `tests-failed` - One or more tests failed.

      If the job fails for any other reason this will not be set.
      This can be used with the Actions expression syntax to conditionally run steps.

runs:
  using: docker
  image: docker://ghcr.io/dflook/terraform-github-actions@sha256:a341d2b4eed08d89e2f16aa85d45335c42d711707aedf0486e095f770fe2904c
  entrypoint: /entrypoints/test.sh

branding:
  icon: globe
  color: purple
